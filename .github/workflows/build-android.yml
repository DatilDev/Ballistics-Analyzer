# .github/workflows/build-android.yml
name: Build Android APK

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  ANDROID_NDK_VERSION: 26.1.10909125

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        packages: |
          platform-tools
          platforms;android-34
          build-tools;34.0.0
          ndk;26.1.10909125
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: |
          aarch64-linux-android
          armv7-linux-androideabi
          x86_64-linux-android
          i686-linux-android
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-android-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-android-
    
    - name: Install cargo-ndk
      run: |
        cargo install cargo-ndk --version 3.5.4
    
    - name: Build Rust libraries
      working-directory: ballistics-mobile
      run: |
        export ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/${{ env.ANDROID_NDK_VERSION }}
        cargo ndk \
          --target aarch64-linux-android \
          --target armv7-linux-androideabi \
          --target x86_64-linux-android \
          --platform 21 \
          build --release
    
    - name: Copy native libraries
      run: |
        mkdir -p ballistics-mobile/android/app/src/main/jniLibs/{arm64-v8a,armeabi-v7a,x86_64}
        cp target/aarch64-linux-android/release/libballistics_mobile.so \
           ballistics-mobile/android/app/src/main/jniLibs/arm64-v8a/
        cp target/armv7-linux-androideabi/release/libballistics_mobile.so \
           ballistics-mobile/android/app/src/main/jniLibs/armeabi-v7a/
        cp target/x86_64-linux-android/release/libballistics_mobile.so \
           ballistics-mobile/android/app/src/main/jniLibs/x86_64/
    
    - name: Decode keystore (if secret exists)
      if: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      env:
        KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      run: |
        echo "$KEYSTORE_BASE64" | base64 --decode > ballistics-mobile/android/release-keystore.jks
    
    - name: Build APK
      working-directory: ballistics-mobile/android
      env:
        KEYSTORE_FILE: ${{ github.workspace }}/ballistics-mobile/android/release-keystore.jks
        KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      run: |
        chmod +x gradlew
        ./gradlew assembleRelease
    
    - name: Build AAB
      working-directory: ballistics-mobile/android
      env:
        KEYSTORE_FILE: ${{ github.workspace }}/ballistics-mobile/android/release-keystore.jks
        KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      run: |
        ./gradlew bundleRelease
    
    - name: Sign APK (if keystore exists)
      if: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      env:
        KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      run: |
        $ANDROID_HOME/build-tools/34.0.0/apksigner sign \
          --ks ballistics-mobile/android/release-keystore.jks \
          --ks-pass "pass:$KEYSTORE_PASSWORD" \
          --key-pass "pass:$KEY_PASSWORD" \
          --ks-key-alias "$KEY_ALIAS" \
          --out ballistics-analyzer-signed.apk \
          ballistics-mobile/android/app/build/outputs/apk/release/app-release-unsigned.apk
    
    - name: Upload unsigned APK
      uses: actions/upload-artifact@v3
      with:
        name: ballistics-analyzer-unsigned
        path: ballistics-mobile/android/app/build/outputs/apk/release/app-release-unsigned.apk
    
    - name: Upload signed APK
      if: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      uses: actions/upload-artifact@v3
      with:
        name: ballistics-analyzer-signed
        path: ballistics-analyzer-signed.apk
    
    - name: Upload AAB
      uses: actions/upload-artifact@v3
      with:
        name: ballistics-analyzer-bundle
        path: ballistics-mobile/android/app/build/outputs/bundle/release/app-release.aab
    
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ballistics-analyzer-signed.apk
          ballistics-mobile/android/app/build/outputs/apk/release/app-release-unsigned.apk
          ballistics-mobile/android/app/build/outputs/bundle/release/app-release.aab
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}